/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as ContainersContainerIdLogsRouteImport } from './routes/containers/$containerId/logs'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const ContainersContainerIdLogsRoute =
  ContainersContainerIdLogsRouteImport.update({
    id: '/containers/$containerId/logs',
    path: '/containers/$containerId/logs',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/containers/$containerId/logs': typeof ContainersContainerIdLogsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/containers/$containerId/logs': typeof ContainersContainerIdLogsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/containers/$containerId/logs': typeof ContainersContainerIdLogsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/demo/tanstack-query'
    | '/containers/$containerId/logs'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/demo/tanstack-query' | '/containers/$containerId/logs'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/demo/tanstack-query'
    | '/containers/$containerId/logs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ContainersContainerIdLogsRoute: typeof ContainersContainerIdLogsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/containers/$containerId/logs': {
      id: '/containers/$containerId/logs'
      path: '/containers/$containerId/logs'
      fullPath: '/containers/$containerId/logs'
      preLoaderRoute: typeof ContainersContainerIdLogsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ContainersContainerIdLogsRoute: ContainersContainerIdLogsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
